[bump]
initial_tag = "v0.1.0"

[changelog]
header = """
# CHANGELOG\n
"""
body = """
{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]($REPO/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%d-%m-%Y") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [Unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        - **({{commit.scope}})**{% if commit.breaking %} **[BREAKING]** {% endif %} \
            {{ commit.message | upper_first }} - by @{{ commit.author.name }} ([{{ commit.id | truncate(length=7, end="") }}]($REPO/commit/{{ commit.id }})) 
    {%- endfor -%}
    {% raw %}\n{% endraw %}\
    {%- for commit in commits %}
        {%- if commit.scope -%}
        {% else -%}
            - {% if commit.breaking %} **[BREAKING]** {% endif %}\
                {{ commit.message | upper_first }} - by @{{ commit.author.name }} ([{{ commit.id | truncate(length=7, end="") }}]($REPO/commit/{{ commit.id }})) 
        {% endif -%}
    {% endfor -%}
{% endfor %}\n
"""
trim = true
postprocessors = [
    { pattern = '\$REPO', replace = "https://github.com/MeReMa-UIT/final-report" }, 
    { pattern = 'CiCi' , replace = "weecici"},
    { pattern = 'Thong Tue Duong' , replace = "tueduong05"},
]


[git]
conventional_commits = true
filter_unconventional = true
require_conventional = false
split_commits = false
commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^doc", group = "Documentation" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactor" },
    { message = "^test", group = "Testing" },
    { message = "^build", group = "Build" },
    { message = "^ci", group = "CI/CD" },
    { message = "^chore", group = "Miscellaneous Chores" },
]
protect_breaking_commits = false
filter_commits = true
tag_prefix = "v"
topo_order = false
sort_commits = "oldest"
link_parsers = [
    { pattern = "#(\\d+)", href = "https://github.com/orhun/git-cliff/issues/$1" },
    { pattern = "RFC(\\d+)", text = "ietf-rfc$1", href = "https://datatracker.ietf.org/doc/html/rfc$1" },
]
